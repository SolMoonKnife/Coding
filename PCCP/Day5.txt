이진 트리에 대하여 알아보자.

이진 트리의 정의 : 각 노드의 차수가 2이하인 트리

그 전에 인접 행렬과 인접 리스트를 다시 한 번 살펴보자.
adj_matrix = [[0 for _ in range(V + 1)] for _ in range(V + 1)]
# 노드 연결 '여부'를 0과 1로 표현
adj_list = [[] for _ in range(V + 1)]
# 각 노드가 어떤 '노드'와 연결 되었는 가를 표현

이진 트리는 노드의 최대 자식 개수가 2개이므로 왼쪽과 오른쪽 자식 정보로 표현 가능

완전 이진 트리 : 모든 자식 노드가 왼쪽부터 채워져야 함
완전 이진 트리는 0번을 제외하고 왼쪽부터 빈틈없이 원소가 채워진 하나의 리스트로 표현할 수 있다.
이때 부모 인덱스를 기반으로 자식 인덱스를 알아낼 수 있음
좌측 자식의 인덱스는 (부모*2)
우측 자식의 인덱스는 (부모*2 + 1)

반대로 자식 인덱스를 통해서 부모 인덱스를 알아낼 수 있음
부모 인덱스는 (자식 인덱스//2) <- 몫

이진 탐색 트리(순서화)
왼쪽 자식 노드의 값이 부모보다 작고, 오른쪽 자식 노드의 값이 부모보다 큰 이진 트리

전위순회, 레벨순회

힙 자료구조(완전 이진 트리를 기반으로 하는 자료 구조) - 부모와 자식이 대소 관계를 가진다
- 최대 힙 : 부모가 자식보다 커야 함
\ 최소 힙 : 부모가 자식보다 작아야 함

-> 최댓값 또는 최솟값을 o(1)로 찾기 위한 자료구조
자료 추가 : heappush
자료 삭제 : heappop
힙큐 모듈을 사용해 간편하게 구현할 수 있음

힙을 활용하여 우선 순위 큐 만들기

